Orar-0.2 supports the following reasoning tasks:
	+ For Horn SHOIF ontologies: full materialization
	+ For DLLite with disjunction and nominals: concept materialization, consistency checking. 

Please follow the instructions below to compile and run Orar-0.2.

1. Prerequisite: 
	+ Orar version 0.2 available at https://github.com/kieen/OrarHSHOIF/releases
	+ Apache Maven 3 
	+ Java  1.7

2. Create an all-in-one-jar file using the following Maven command (run from the project's folder, e.g. OrarHSHOIF-0.1):

mvn package

3. The resulting .jar file will be created in the folder "target", e.g. target/OrarHSHOIF-0.0.1-SNAPSHOT-jar-with-dependencies.jar
Optionally you can rename it to have a shorter name, e.g. Orar.jar. 
From now on, we refer to the name Orar.jar instead of OrarHSHOIF-0.0.1-SNAPSHOT-jar-with-dependencies.jar

4. Now, you will be able to run Orar.jar. 
Suppose we are now in the folder "tutorial" and we want to run Orar with the following options/input:
   + compute the concept materialization of the ontology
   + run Orar with DLLite ontologies
   + use HermiT as an internal reasoner to materialize the abstract ontology
   + print out the statistic of the (materialized) ontology and the reasoning time
   + the input TBox is: tbox.owl
   + the input ABoxes are: abox1.owl, abox2.owl, which are indicated in the file aboxList.txt

Use the following command to run Orar.jar with the above options and input:
   
java -jar ../target/Orar.jar -task materialization -dl dllite_hod -reasoner hermit -statistic -reasoningtime -tbox ./tbox.owl -abox ./aboxList.txt

5. To run Orar with other options, e.g. with other reasoners, use the following command to see the detailed options.
 
java -jar ../target/Orar.jar





